---
- name: Create a security group
  os_security_group:
    cloud: "{{ app_cloud }}"
    state: present
    name: "{{ app_sec_grp }}"
    description: security group for openshift servers

- name: Delete a egress IPv4 TCP rule covering all ports
  os_security_group_rule:
    state: absent
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    ethertype: IPv4
    direction: egress

- name: Delete a egress IPv6 TCP rule covering all ports
  os_security_group_rule:
    state: absent
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    ethertype: IPv6
    direction: egress

- name: Create a ingress TCP rule covering all ports
  os_security_group_rule:
    state: present
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    protocol: tcp
    port_range_min: 1
    port_range_max: 65535
    remote_ip_prefix: 0.0.0.0/0
    direction: ingress

- name: Create a egress TCP rule covering all ports
  os_security_group_rule:
    state: present
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    protocol: tcp
    port_range_min: 1
    port_range_max: 65535
    remote_ip_prefix: 0.0.0.0/0
    direction: egress

- name: Create a ingress TCP rule covering all ports
  os_security_group_rule:
    state: present
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    protocol: tcp
    port_range_min: 1
    port_range_max: 65535
    remote_group: "{{ app_sec_grp }}"
    direction: ingress

- name: Create a egress TCP rule covering all ports
  os_security_group_rule:
    state: present
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    protocol: tcp
    port_range_min: 1
    port_range_max: 65535
    remote_group: "{{ app_sec_grp }}"
    direction: egress

- name: Create a egress udp rule covering all ports
  os_security_group_rule:
    state: present
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    protocol: udp
    port_range_min: 1
    port_range_max: 65535
    remote_group: "{{ app_sec_grp }}"
    direction: egress

- name: Create a ingress udp rule covering all ports
  os_security_group_rule:
    state: present
    cloud: "{{ app_cloud }}"
    security_group: "{{ app_sec_grp }}"
    protocol: udp
    port_range_min: 1
    port_range_max: 65535
    remote_group: "{{ app_sec_grp }}"
    direction: ingress

- name: Create an externally accessible network named 'ext_network'.
  os_network:
    cloud: "{{ admin_cloud }}"
    state: present
    name: "{{ openstack_ext_net_name }}"
    external: true
    provider_physical_network: "{{ ext_net_name }}"
    provider_network_type: "{{ ext_net_type }}"

- name: Create a subnet on the external network
  os_subnet:
    state: present
    cloud: "{{ admin_cloud }}"
    network_name: "{{ openstack_ext_net_name }}"
    name: "{{ openstack_ext_subnet_name }}"
    cidr: "{{ ext_net_cidr }}"
    gateway_ip: "{{ ext_net_gateway }}"
    enable_dhcp: False
    allocation_pool_start: "{{ ext_net_pool_start }}"
    allocation_pool_end: "{{ ext_net_pool_end }}"
    dns_nameservers:
        - "{{ ext_net_dns }}"

- name: Create an private network
  os_network:
    cloud: "{{ app_cloud }}"
    state: present
    name: "{{ openstack_int_net_name }}"
    project: "{{ project }}"
    external: false

- name: Create a new private subnet on the specified network
  os_subnet:
    state: present
    cloud: "{{ app_cloud }}"
    network_name: "{{ openstack_int_net_name }}"
    name: "{{ openstack_int_subnet_name }}"
    cidr: "{{ int_net_cidr }}"
    gateway_ip: "{{ int_net_gateway }}"
    enable_dhcp: True
    allocation_pool_start: "{{ int_net_pool_start }}"
    allocation_pool_end: "{{ int_net_pool_end }}"
    dns_nameservers:
      - "{{ int_net_dns }}"

- name: "Create a router attached to {{ openstack_ext_net_name }}  connecting to internal subnet {{ openstack_int_subnet_name }}"
  os_router:
    cloud: "{{ app_cloud }}"
    state: present
    name: "{{ openstack_router }}"
    network: "{{ openstack_ext_net_name }}"
    interfaces:
      - "{{ openstack_int_subnet_name }}"